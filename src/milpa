#!/usr/bin/env bash
MILPA_PATH="$MILPA_ROOT${MILPA_PATH+:}$MILPA_PATH"
_pwd="$(pwd)"
[[ -d ".milpa" ]] && [[ ! "$MILPA_PATH" =~ :?$_pwd:? ]] && MILPA_PATH="$MILPA_PATH:$_pwd"
export MILPA_PATH
IFS=: read -ra MILPA_PATH_ARR <<<"$MILPA_PATH"
export MILPA_PATH_ARR

function load_milpa_util () {
  local env_name
  for util_name in "$@"; do
    env_name="_MILPA_UTIL_${util_name//-/_}"
    if [[ "${!env_name}" == "1" ]]; then
      # util already loaded
      continue
    fi

    for pkg in $MILPA_PATH_ARR ; do
      util_path="${pkg}/.milpa/util/$util_name.sh"
      if [[ -f "$util_path" ]]; then
        set -o allexport
        # shellcheck disable=1090
        source "$util_path"
        set +o allexport
        export "${env_name?}=1"
        continue
      fi
    done

    if [[ "${!env_name}" != "1" ]]; then
      # util not found
      >&2 echo "Missing util named $util_name"
    exit 2
    fi
  done
}

load_milpa_util log sub-commands
function _fail () {
  _log error "$*"
  exit 2
}

if [[ "$#" -eq 0 ]]; then
  cat <<-NO_COMMAND
usage: $0 [SUB-COMMAND...]

Available sub-commands are:

$(_sub_commands_descriptions)
NO_COMMAND
  _fail "No sub-command provided"
fi


cmd="$(_sub_commands_find "${@}" 2>/dev/null)" || _fail "unknown command <${command_file:-${*}}>"
IFS=$'\n' read -d -r command_name command_file command_package argv_len <<<"$cmd"
export MILPA_COMMAND_NAME="$command_name"
export MILPA_COMMAND_PACKAGE="$command_package"

shift $argv_len
echo "${@}"
exit

if [[ -n "${VERBOSE}" ]]; then
  export VERBOSE=1
  _log debug "running <$command_name from> <$command_file> with arguments <${*}>"
fi

if [[ -f "$MILPA_COMMAND_PACKAGE/.milpa/util/before-run.sh" ]]; then
  set -o allexport
  # shellcheck disable=1091
  source "$MILPA_COMMAND_PACKAGE/.milpa/util/before-run.sh"
  set +o allexport
fi

if [[ -x "$command_file" ]]; then
  exec "$command_file" "$*"
elif [[ "$command_file" == *.sh ]]; then
  # shellcheck disable=1090
  source "$command_file"
else
  _log warning "Unsure how to run $command_name. Found $command_file, but it is neither a .sh file nor executable"
  _fail "Unable to continue running sub-command."
fi
