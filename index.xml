<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>milpa on milpa ðŸŒ½</title>
    <link>https://milpa.dev/</link>
    <description>Recent content in milpa on milpa ðŸŒ½</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://milpa.dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting started</title>
      <link>https://milpa.dev/help/docs/milpa/quick-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://milpa.dev/help/docs/milpa/quick-guide/</guid>
      <description>We&amp;rsquo;ll assume you have a repo with your team&amp;rsquo;s code at ~/src/my-teams-app, but you can also test milpa out by creating any folder, wherever you like.
Once that&amp;rsquo;s set up, you&amp;rsquo;d get started with milpa by:
Installing it, installing milpa&amp;rsquo;s autocompletion script to your shell, possibly restarting your session, heading to your team&amp;rsquo;s project folder creating a new command, and editing it&amp;rsquo;s spec running the command to test it out  installing milpa # Running the following command will install the latest version of milpa</description>
    </item>
    
    <item>
      <title></title>
      <link>https://milpa.dev/help/docs/milpa/environment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://milpa.dev/help/docs/milpa/environment/</guid>
      <description>There&amp;rsquo;s a few environment variables that control the behavior of milpa.
Paths # MILPA_ROOT # MILPA_ROOT points to the installed milpa kernel, by default /usr/local/lib/milpa. This folder contains a milpa repo, the milpa executable, and a helper binary named compa, along a copy of the license and the source repo&amp;rsquo;s README.
You can set it to a local installation, like a fork, and run $MILPA_ROOT/milpa to use that fork&amp;rsquo;s scripts instead of an installed version.</description>
    </item>
    
    <item>
      <title>Why use milpa</title>
      <link>https://milpa.dev/help/docs/milpa/alternatives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://milpa.dev/help/docs/milpa/alternatives/</guid>
      <description>I built milpa with a few use cases in mind:
 I need to share groups of scripts used by most folks in an engineering team (i.e. setup development environments, work with secrets/credentials) I want to share context and code, without having to ask folks to run stuff off READMEs I forget I have all these functions and scripts in my dotfiles/PATH/fpath that I always have to read the source for before using them, if I&amp;rsquo;ve not run them in a while.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://milpa.dev/help/docs/milpa/changelog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://milpa.dev/help/docs/milpa/changelog/</guid>
      <description>Milpa follows the semver 2.0.0 specification.
Upcoming # ðŸŒ± Features #  (dfa152) Argument and flag run-time validation, so your command can focus on using them. (dfa152) Command line argument, flag autocomplete for your commands on bash, zsh and fish. Completions can come from other commands. (dfa152) Don&amp;rsquo;t wanna write stuff over and over again? milpa itself repo install will come in handy to install remote milpa repos. (dfa152) Drop your commands and specs in your project&amp;rsquo;s .</description>
    </item>
    
    <item>
      <title></title>
      <link>https://milpa.dev/help/docs/milpa/command/spec/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://milpa.dev/help/docs/milpa/command/spec/</guid>
      <description>Command specs go along with your scripts and help inform milpa of what its input should look like. Based on it, milpa will produce help pages and autocompletions, and may validate the arguments to your command.
Specs must be written in YAML, have a yaml extension, and be named exactly like your command (minus the extension, if any). For example, given a command at .milpa/commands/my-command.sh the corresponding spec file would be .</description>
    </item>
    
    <item>
      <title></title>
      <link>https://milpa.dev/help/docs/milpa/repo/docs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://milpa.dev/help/docs/milpa/repo/docs/</guid>
      <description>!milpa can render any markdown-formatted documents stored at .milpa/docs to the terminal. Files must be named with an / extension and may exist at any folder depth. Files named .milpa/docs/whatever/ may be displayed by running either milpa help docs whatever or milpa help docs whatever index
Same docs are rendered to HTML, using the milpa itself docs html command.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://milpa.dev/help/docs/milpa/repo/hooks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://milpa.dev/help/docs/milpa/repo/hooks/</guid>
      <description>milpa provides a couple of hook points for you to tweak the behavior of your shell and your repo&amp;rsquo;s commands. Hooks for your repo must be placed in the .milpa/hooks folder.
shell-init(.sh) # This hook is run whenever milpa itself shell init is called. Its purpose is to set any environment variables specific to your repo during every shell&amp;rsquo;s initialization process. This hook can be either a bash shell script with an .</description>
    </item>
    
    <item>
      <title>create</title>
      <link>https://milpa.dev/itself/create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://milpa.dev/itself/create/</guid>
      <description>Create a milpa command
Usage # milpa itself create [options] NAME... [flags]
Arguments #  NAME... - the name you&amp;rsquo;d like for your command  Options #  --config-format (string): The configuration format to use to describe this command. Default: yaml. --executable (bool): Create an empty, executable command. Useful when you&amp;rsquo;d like using something other than bash. --open (bool): Open the script file in your current $EDITOR after creation. --repo (string): a path to the milpa repo to create this command in.</description>
    </item>
    
    <item>
      <title>create</title>
      <link>https://milpa.dev/itself/docs/create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://milpa.dev/itself/docs/create/</guid>
      <description>Creates a new doc in your milpa
Usage # milpa itself docs create [options] NAME... [flags]
Arguments #  NAME... - the name you&amp;rsquo;d like for your doc  Options #  --open (bool): Open the script file in your current $EDITOR after creation. --repo (string): a path to the milpa repo to create this doc in. By default, the nearest .milpa directory from pwd and up.  Description # See milpa help docs for more info on docs.</description>
    </item>
    
    <item>
      <title>doctor</title>
      <link>https://milpa.dev/itself/doctor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://milpa.dev/itself/doctor/</guid>
      <description>Validates all commands found on the MILPA_PATH
Usage # milpa itself doctor [options]
Description # This command will run checks on all known commands, parsing specs and validating their values.
Global Options #  --help (bool): Display help for any command. --no-color (bool): Print to stderr without any formatting codes. --silent (bool): Silence non-error logging. --verbose (bool): Log verbose output to stderr.  </description>
    </item>
    
    <item>
      <title>html</title>
      <link>https://milpa.dev/itself/docs/html/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://milpa.dev/itself/docs/html/</guid>
      <description>Renders or displays HTML documentation for all commands
Usage # milpa itself docs html [options] [ACTION] [flags]
Arguments #  ACTION - the action to take with documentation  Options #  --hostname (string): The hostname to set as base for the rendered docs. Default: milpa.dev. --image (string): The docker image with hugo to use for building html docs. Default: ghcr.io/unRob/milpa:latest. --port (string): The port to expose docs on, when ACTION is serve.</description>
    </item>
    
    <item>
      <title>init</title>
      <link>https://milpa.dev/itself/shell/init/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://milpa.dev/itself/shell/init/</guid>
      <description>Initializes shells
Usage # milpa itself shell init [options]
Description # Running milpa itself shell init will look for shell scripts named .milpa/hooks/shell-init.sh/executables named .milpa/hooks/shell-init and source them.
These shell-init scripts should print shell-specific instructions that a user may eval during the initialization of a new shell prompt. The @milpa.shell bash functions will be available for script shells to facilitate printing export statements compatible with POSIX-compliant shells and fish.
Using with bash, zsh, etc: # On POSIX-compliant shells (zsh or bash, for example), you may add this to near the very end of shell profile (usually at ~/.</description>
    </item>
    
    <item>
      <title>install</title>
      <link>https://milpa.dev/itself/repo/install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://milpa.dev/itself/repo/install/</guid>
      <description>Installs a milpa repo
Usage # milpa itself repo install [options] SOURCE [TARGET] [flags]
Arguments #  SOURCE - A go-getter URL to fetch the repo from. TARGET - The path where to place the resulting .milpa folder in  Options #  --global (bool): If specified, install the repo to $MILPA_ROOT. --user (bool): If specified, install the repo to ~/.local/share/milpa/repos.  Description # Fetches a milpa repo and installs it to any of three locations:</description>
    </item>
    
    <item>
      <title>install-autocomplete</title>
      <link>https://milpa.dev/itself/shell/install-autocomplete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://milpa.dev/itself/shell/install-autocomplete/</guid>
      <description>Generates shell completion scripts
Usage # milpa itself shell install-autocomplete [options]
Description # Generates a shell completion script for the current $SHELL. It currently supports bash, fish and zsh. It will write a (_)milpa file in your shell&amp;rsquo;s completion function folder:
 for bash, either /etc/bash_completion.d or /usr/local/etc/bash_completion.d for zsh, whatever is first in $fpath, for example: /usr/local/share/zsh/site-functions for fish, $HOME/.config/fish/completions/  You&amp;rsquo;ll need to reload your shell (for example, by restarting your terminal), and make sure your shell&amp;rsquo;s completion system is enabled!</description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://milpa.dev/itself/repo/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://milpa.dev/itself/repo/list/</guid>
      <description>Lists installed repos
Usage # milpa itself repo list [options] [flags]
Options #  --paths-only (bool): Only output the paths to repos with no decoration.  Description # Milpa can install repositories from remote locations at two different locations, depending on how it was instaled.
 In the $MILPA_ROOT (by default, /usr/local/lib/milpa) In $XDG_DATA_HOME/milpa folder  For more information on installing packages, see milpa itself repo install --help
Global Options #  --help (bool): Display help for any command.</description>
    </item>
    
    <item>
      <title>uninstall</title>
      <link>https://milpa.dev/itself/repo/uninstall/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://milpa.dev/itself/repo/uninstall/</guid>
      <description>Removes an installed milpa repo
Usage # milpa itself repo uninstall [options] PATH
Arguments #  PATH - The repo path to uninstall  Description # Uninstalls a milpa repo by PATH. See milpa itself repo list --help for a list of available repos
Global Options #  --help (bool): Display help for any command. --no-color (bool): Print to stderr without any formatting codes. --silent (bool): Silence non-error logging. --verbose (bool): Log verbose output to stderr.</description>
    </item>
    
    <item>
      <title>version</title>
      <link>https://milpa.dev/itself/version/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://milpa.dev/itself/version/</guid>
      <description>Displays the version of milpa
Usage # milpa itself version [options]
Description # Outputs the version of milpa to stdout, printing a new line if the output is a TTY. Also available as milpa --version
Global Options #  --help (bool): Display help for any command. --no-color (bool): Print to stderr without any formatting codes. --silent (bool): Silence non-error logging. --verbose (bool): Log verbose output to stderr.  </description>
    </item>
    
  </channel>
</rss>
